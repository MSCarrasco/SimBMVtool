---
paths:
  path_data: ./gammapy-datasets/dev/hess-dl3-dr1/data # Path to dl3 files containing the full-enclosure IRFs
  models: ./SimBMVtool/models.yaml
  gammapy_catalog: gammapy-datasets/dev/catalogs/gammacat/gammacat.fits.gz
  output_dir: ./outputs
  subdir: crab_hess_bkg_only
data:
  run_list: [] # None, array of obs_ids
  obs_pattern: '*_dl3_*.fits.gz'
  cos_zenith_bin_edges: [-0.0, 0.25, 0.5, 0.75, 1.0]      # Zenith binning used for the zenith binned model plotting
  cos_zenith_bin_centers:  [0.125, 0.375, 0.625, 0.875]
wobbles:                                      # Add or remove the wobbles you want.
  wobble_1:                                   # The runs are used to get the pointing infos. Numbers need to be in the dl3 files following <path_data>
    run: 23523
    seed: 42
  wobble_2:
    run: 23526
    seed: 24
  wobble_3:
    run: 23559
    seed: 404
  wobble_4:
    run: 23592
    seed: 666
simulation:
  n_run: 2                                    # per wobble
  livetime: 600                               # [s]
  single_pointing: False                      # If true, only W1 observations are simulated (this is useful for tests)
  obs_collection_type: n_run_obs_per_wobble   # one_obs_per_wobble, n_run_obs_per_wobble
  t_ref: '2024-10-05 23:00:00'                # The first run starting time. The altaz pointing will depend on this date
  delay: 600                                  # [s]
  time_oversampling: 300                      # [s] time step between subdatasets, i.e. maximum time step for background IRF evaluation
  fov_rotation_error_limit: 1                 # [deg] maximum estimated FoV rotation error before re-evaluation of the background IRF evaluation by gammapy
source:
  catalog_name: Crab nebula                   # Catalog name. If not found, will use coordinates given in config
  coordinates:
    ra: 83.63308
    dec: 22.0145
  flux_to_0: True                             # Set to True for background only simulated data. If False, the source needs to be in Gammacat or declared in custom_source
  is_custom: False
  custom_source:
    name: crab disk
    spectral:
        type: ExpCutoffPowerLawSpectralModel
        parameters: [{'name': 'index', 'value': 2.3900, 'error': 3.000e-02},
                      {'name': 'amplitude', 'value': 3.7600e-11, 'unit': 'TeV-1 s-1 cm-2', 'error': 7.000e-13},
                      {'name': 'lambda_', 'value': 6.9930e-02, 'unit': 'TeV-1', 'error': 1.027e-02},
                      {'name': 'alpha', 'value': 1.0000, 'error': 0.0000},
                      {'name': 'reference', 'value': 1.0, 'unit': 'TeV'}]
    spatial:
      type: DiskSpatialModel
      parameters: [{'name': 'lon_0', 'value': 83.63308, 'unit': 'deg'},
                      {'name': 'lat_0', 'value':  22.0145, 'unit': 'deg'},
                      {'name': 'r_0', 'value': 0.2, 'unit': 'deg'},
                      {'name': 'phi', 'value': 0, 'unit': 'deg'},
                      {'name': 'edge_width', 'value': 0.01},
                      {'name': 'e', 'value': 0},
                      {'name': 'frame', 'value': icrs}]
  exclusion_region:
    shape: noexclusion                          # n_shapes, noexclusion.
    regions:
      circle_1:                              # Shapes can be circle, ellipse or ractangle, with SkyRegion parameters
        radius: 0.3
        ra: 83.63308
        dec: 22.0145
        is_source: True                      # Region masks signal region. False if background source in FoV (like Zeta Tauri for Crab)
background:
  irf:
    down_factor: 10
    offset_factor: 2
  custom_source:
    name: 1d-gauss-pl
    spectral:
        type: PowerLawNormSpectralModel
        parameters: [{'name': 'norm', 'value': 10.0, 'unit': 'TeV-1 s-1 sr-1'},
                    {'name': 'tilt', 'value': 3},
                    {'name': 'reference', 'value': 1.0, 'unit': 'TeV'}]
    spatial:
        type: GaussianSpatialModel_LinearGradient
        frame: AltAz
        parameters: [{'name': 'lon_0', 'value': 0.0, 'unit': 'deg'},
                        {'name': 'lat_0', 'value': 0.0, 'unit': 'deg'},
                        {'name': 'lon_grad', 'value': 0.0, 'unit': 'deg-1'},
                        {'name': 'lat_grad', 'value': 0.0, 'unit': 'deg-1'},
                        {'name': 'sigma', 'value': 1.7, 'unit': 'deg'},
                        {'name': 'e', 'value': 0.0},
                        {'name': 'phi', 'value': 0.0, 'unit': 'deg'}]
  spatial_model_gradient:
    lon_grad_variation: False
    lat_grad_variation: False
  maker:
    correlation_radius: 0.08    # [deg]
    correlate_off: True
    ring:
      internal_ring_radius: 0.2 # [deg]
      width: 0.3                # [deg]
    fov:
      method: scale # scale, fit
acceptance:
  dimension: 3
  tool: baccmod
  method: stack # stack,fit
  out_collection: True
  true_collection: False        # If False, the same background IRF is used as true irf for all observations
  FoV_alignment: ALTAZ          # ALTAZ, RADEC
  energy:
    e_min: 0.5
    e_max: 10
    unit: TeV
    nbin: 3
  offset:
    offset_max: 5.           # [deg]
    nbin: 7
  cos_zenith_binning:
    zenith_binning: False
    initial_cos_zenith_binning: 0.01
    runwise_normalisation: False
    cos_zenith_binning_method: min_livetime_per_wobble
    cos_zenith_binning_parameter_value: 3000    # [s] if 'livetime' in method, n_obs if 'observation' in method
  fit:
    fnc: bilinear_gaussian2d
    bounds:
      x_cm: [0,0]
      y_cm: [0,0]
      psi: [0,0]
      #width: [0.3,0.33]
      #length: [0.3,0.33]
      #x_gradient: [-11,-9.99] 
      #y_gradient: [0,0] 
